Traceback (most recent call last):
  File "/Users/lyes/Dropbox/UofT/Teaching/MIE1666_F24/1666env/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/lyes/Dropbox/UofT/Teaching/MIE1666_F24/1666env/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/lyes/Dropbox/UofT/Teaching/MIE1666_F24/1666env/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/lyes/anaconda3/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/Users/lyes/Dropbox/UofT/Teaching/MIE1666_F24/1666env/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/lyes/Dropbox/UofT/Teaching/MIE1666_F24/1666env/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/lyes/Dropbox/UofT/Teaching/MIE1666_F24/1666env/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig, ax = plt.subplots()
# ax.set_axis_off()

x1, x2 = symbols('x1 x2')
p1 = plot_implicit(
    Eq(x1 + x2 - 4, 0),
    Eq(-x1 + -2*x2 + 1, 0),
    Eq(x1, 0),
    Eq(x2, 0),
    (x1, -1, 5), (x2, -1, 5),
    {"linestyles": "-"}, aspect="equal",
    show=False, grid=False, show_in_legend=False, fig=fig, ax=ax)

objective_function = 10*x1+8*x2
objective_contour = plot_contour(objective_function,  (x1, -1, 5), (x2, -1, 5), 
                                 {"levels": 25, "cmap": "Greys", "alpha":0.9, "linestyles": "-", "linewidths": 1.5}, 
                                 is_filled=True, show=False, legend=False, fig=fig, ax=ax)
objective_line = plot((-10.0/8)*x1 + 3, rendering_kw={'color':'yellow','linestyle':':'}, show_in_legend=False, show=False, legend=False, fig=fig, ax=ax)

ax.set_title(
    "Minimizing $%s$ over the set\n $\{x_1, x_2\in\mathbb{N}\;|\;x_1 + x_2 \leq 4, -x_1 + -2x_2 \leq -1\}$."
    % latex(objective_function),y=1.03)

obj_vec = graphics(arrow_2d((1, 14.0/8), (-.4,-.32), rendering_kw={'color':'yellow','linewidth':2}, show_in_legend=False), show=False, fig=fig, ax=ax)

from sympy.solvers.simplex import lpmax
minimizer = (lpmax(-objective_function, [x1 + x2 - 4 <= 0, -x1 + -2*x2 + 1 <= 0, x1 >= 0, x2 >= 0]))
# maximizer = (lpmax(objective_function, [x1 + x2 - 4 <= 0, -x1 + -2*x2 + 1 <= 0, x1 >= 0, x2 >= 0]))
plt.scatter(1, 0, marker='*', s=150, color='yellow', zorder=100, label='IP optimum $(%d,%d)$' % (maximizer[1][x1], maximizer[1][x2]))
plt.scatter(minimizer[1][x1], minimizer[1][x2], marker='*', s=150, color='grey', zorder=100, label='LP relax. opt. $(%.2f,%.2f)$' % (minimizer[1][x1], minimizer[1][x2]))

integer_points = [(0,1),(0,2),(0,3),(0,4),(1,0),(1,1),(1,2),(1,3),(2,0),(2,1),(2,2),(3,0),(3,1),(4,0)]
for point in integer_points:
    plt.scatter(point[0], point[1], marker='o', s=20, color='black', zorder=90)

p1.append(objective_contour[0])
p1.append(objective_line[0])
p1.append(obj_vec[0])
p1.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[7], line 29[0m
[1;32m     27[0m minimizer [38;5;241m=[39m (lpmax([38;5;241m-[39mobjective_function, [x1 [38;5;241m+[39m x2 [38;5;241m-[39m [38;5;241m4[39m [38;5;241m<[39m[38;5;241m=[39m [38;5;241m0[39m, [38;5;241m-[39mx1 [38;5;241m+[39m [38;5;241m-[39m[38;5;241m2[39m[38;5;241m*[39mx2 [38;5;241m+[39m [38;5;241m1[39m [38;5;241m<[39m[38;5;241m=[39m [38;5;241m0[39m, x1 [38;5;241m>[39m[38;5;241m=[39m [38;5;241m0[39m, x2 [38;5;241m>[39m[38;5;241m=[39m [38;5;241m0[39m]))
[1;32m     28[0m [38;5;66;03m# maximizer = (lpmax(objective_function, [x1 + x2 - 4 <= 0, -x1 + -2*x2 + 1 <= 0, x1 >= 0, x2 >= 0]))[39;00m
[0;32m---> 29[0m plt[38;5;241m.[39mscatter([38;5;241m1[39m, [38;5;241m0[39m, marker[38;5;241m=[39m[38;5;124m'[39m[38;5;124m*[39m[38;5;124m'[39m, s[38;5;241m=[39m[38;5;241m150[39m, color[38;5;241m=[39m[38;5;124m'[39m[38;5;124myellow[39m[38;5;124m'[39m, zorder[38;5;241m=[39m[38;5;241m100[39m, label[38;5;241m=[39m[38;5;124m'[39m[38;5;124mIP optimum $([39m[38;5;132;01m%d[39;00m[38;5;124m,[39m[38;5;132;01m%d[39;00m[38;5;124m)$[39m[38;5;124m'[39m [38;5;241m%[39m ([43mmaximizer[49m[[38;5;241m1[39m][x1], maximizer[[38;5;241m1[39m][x2]))
[1;32m     30[0m plt[38;5;241m.[39mscatter(minimizer[[38;5;241m1[39m][x1], minimizer[[38;5;241m1[39m][x2], marker[38;5;241m=[39m[38;5;124m'[39m[38;5;124m*[39m[38;5;124m'[39m, s[38;5;241m=[39m[38;5;241m150[39m, color[38;5;241m=[39m[38;5;124m'[39m[38;5;124mgrey[39m[38;5;124m'[39m, zorder[38;5;241m=[39m[38;5;241m100[39m, label[38;5;241m=[39m[38;5;124m'[39m[38;5;124mLP relax. opt. $([39m[38;5;132;01m%.2f[39;00m[38;5;124m,[39m[38;5;132;01m%.2f[39;00m[38;5;124m)$[39m[38;5;124m'[39m [38;5;241m%[39m (minimizer[[38;5;241m1[39m][x1], minimizer[[38;5;241m1[39m][x2]))
[1;32m     32[0m integer_points [38;5;241m=[39m [([38;5;241m0[39m,[38;5;241m1[39m),([38;5;241m0[39m,[38;5;241m2[39m),([38;5;241m0[39m,[38;5;241m3[39m),([38;5;241m0[39m,[38;5;241m4[39m),([38;5;241m1[39m,[38;5;241m0[39m),([38;5;241m1[39m,[38;5;241m1[39m),([38;5;241m1[39m,[38;5;241m2[39m),([38;5;241m1[39m,[38;5;241m3[39m),([38;5;241m2[39m,[38;5;241m0[39m),([38;5;241m2[39m,[38;5;241m1[39m),([38;5;241m2[39m,[38;5;241m2[39m),([38;5;241m3[39m,[38;5;241m0[39m),([38;5;241m3[39m,[38;5;241m1[39m),([38;5;241m4[39m,[38;5;241m0[39m)]

[0;31mNameError[0m: name 'maximizer' is not defined

